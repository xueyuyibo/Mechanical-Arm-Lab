# import numpy as np
# from numpy.linalg import inv
# import cv2
# import math

# '''
# a = np.zeros((5,2),int)
# a[0][:] = [122, 101]
# a[1][:] = [123, 104]
# a[2][:] = [468,  89]
# a[3][:] = [479, 432]
# a[4][:] = [281, 266]

# a_ = np.transpose(a)
# aa = np.matmul(inv(np.matmul(a_,a)),a_)

# print aa

# b = np.zeros((1,6),int)
# b[:][:] = [1,2,3,4,5,6]
# print b.reshape(2,3)
# c= np.zeros((1,6),int)
# print b.append(c)
# # A = np.zeros(shape=(8,6))
# # print a 
# # b = a.reshape(10,1)
# # print b
# # # A[0][0:3] = a[0][:].append(1)
# # print A
# # A[0][0:3] = [a[0][:],1]
# # a = ["[122 101]","[123 104]","[468  89]","[479 432]","[281 266]"]
# # pts1 = a.astype(np.float32)
# '''
# M = np.array([[2,3,4],[3,4,5]])
# cor = M.shape
# print cor
# for a in range(cor[0]):
# 	for b in range(cor[1]):
# 		print M[a][b]
# 		print a,b

# import numpy as np
# f = open('./util/calibration.cfg', 'r')


# str1 = ''.join(f.read().splitlines()[1:4])
# print('---str1---')
# print str1
# # print type(str1)
# str2 = str1.replace("[", " ")
# print('---str2---')
# print str2
# str3 = str2.replace("]"," ")
# print('---str3---')
# print str3
# intrinsic_matrix = np.fromstring(str3,dtype=float, sep=' ')
# intrinsic_matrix = intrinsic_matrix.reshape([3,3])
# #print type(intrinsic_matrix)
# #intrinsic_matrix = np.array(str3)
# print intrinsic_matrix[0][0]

# # temp = f.read().splitlines()[1:4]
# # intrinsic_matrix = np.array([np.array(xi) for xi in temp])
# # print ('-----intrinsic_matrix----')
# # print intrinsic_matrix
# # temp = np.array(temp)
# # tep = np.hstack(intrinsic_matrix)
# # print tep[0][0]
# # print intrinsic_matrix

# #print f.read().split('intrinsic matrix:')
# # for line in f: 
# # 	print line 
# f.close()  



# # left_lower_world = [555, -300] 
# # left_upper_world = [-550, -300]
# # right_upper_world = [-550, 400]
# # right_lower_world = [555, 400]


# left_lower_world = np.array([555, -300])
# left_upper_world = np.array([-550, -300])
# right_upper_world = np.array([-550, 400])
# right_lower_world = np.array([555, 400])
# # world_points = [left_lower_world, left_upper_world, right_upper_world, right_lower_world]
# # world_points = np.append([left_lower_world,left_upper_world],[right_upper_world, right_lower_world], axis=0)
# print world_points
# import math
# print math.tan(1)
# print bin(8)
# import numpy as np
# # a = []
# # a.append("aa")
# # a.append(2)
# # print a
# # a = np.array([1,2,3])
# # b = np.append(a, 1 )
# # print b
# # print 2*np.kron(np.eye(3), a)
# car = {
#   "brand": "Ford",
#   "model": "Mustang",
#   "year": 1964
# }

# x = car.items()
# print x

import sys
import cv2

font = cv2.FONT_HERSHEY_SIMPLEX

def mouse_callback(event,x,y,flags,param):
    r = img[y][x][2]
    g = img[y][x][1]
    b = img[y][x][0]
    h = hsv[y][x][0]
    s = hsv[y][x][1]
    v = hsv[y][x][2]
    output_rgb = "R:%d, G:%d, B:%d " % (r, g, b)
    output_hsv = "H:%d, S:%d, V:%d" % (h, s, v)
    tmp = img.copy()
    cv2.putText(tmp,output_rgb, (10,20), font, 0.5, (0,0,0))
    cv2.putText(tmp,output_hsv, (10,40), font, 0.5, (0,0,0))
    cv2.imshow('window', tmp)
    if event == cv2.EVENT_LBUTTONDOWN:
        print "bgr: (%d, %d, %d) \nhsv: (%d, %d, %d)" % (b,g,r,h,s,v)






if len(sys.argv) == 2:
    print "Opening " + str(sys.argv[1])
    img = cv2.imread(sys.argv[1])
    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)

    cv2.namedWindow("window",1)
    cv2.imshow('window', img)
    
    cv2.setMouseCallback("window",mouse_callback)

    while True:
        ch = 0xFF & cv2.waitKey(10)
        if ch == 27:
            break
    cv2.destroyAllWindows()

else:
    print "Expected filename as argument"

    ######
    ---co_eff_camera_2_world---
[[  1.00390382e+03   6.81941154e+01  -4.11826135e+01   9.41156288e+01]
 [ -7.20439190e+01   1.01489943e+03  -2.21034947e+01   1.44523136e+01]
 [  1.15061591e+01  -3.91477233e+00  -9.66161407e+02   9.08135219e+02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   1.00000000e+00]]


---print self.kinect.depth2rgb_affine-----
[[  9.21093609e-01   5.74762797e-04   1.00493484e+01]
 [  7.21723597e-04   9.18735922e-01   4.92139662e+01]]

 ########### task 3 config
 # [[0, 0, 0, 0, 0, 0], \
 [-2.3283842992478636, -1.3494655627726495, -0.19563031225641003, 0.08445141541935453, -1.4970932733431084, -2.2136507375073315], \
 [-2.2685444391811966, -1.266610371911111, 0.04372912801025608, -0.06909661261583544, -1.7581249210029326, -2.2187690051085043], \

 [-2.1887579590923076, -1.0702128824615387, -0.7188454989931623, 0.0537418098123168, -1.3998461889208211, -2.0754575122756598], \
 [-2.1611395621384615, -0.8339221529675216, -0.7464638959470085, 0.043505274609970446, -1.4919750057419354, -2.065220977073314], \

 [-2.0046353127333334, -0.7756166482871798, -1.211373578003419, 0.15610716183577722, -1.0671587948445749, -2.049866174269795], \
 [-1.949398518825641, -0.7219142097658122, -0.8891589468752139, 0.03838700700879771, -1.4868567381407625, -2.0447479066686216], \

 [-1.6977642354683762, -0.7387921190153848, -1.3003661904102564, 0.08445141541935453, -1.0415674568387097, -1.7222970477947215], \
 [-1.7023673016273504, -0.5331884972478633, -1.2343889087982907, 0.06397834501466271, -1.2821260340938416, -1.7222970477947215], \

 [-1.4369238197931624, -0.7756166482871798, -1.238991974957265, 0.03838700700879771, -1.128578006058651, -1.3742548509149561], \
 [-1.45533608442906, -0.6590056389264958, -1.0119073777811964, 0.03838700700879771, -1.4510288649325513, -1.3742548509149561], \

 [-1.2129079333897437, -0.9183116992153848, -0.9950294685316239, 0.03326873940762454, -1.2667712312903228, -1.169524146868035],\
  [-1.2282514872529915, -0.6129749773367519, -1.1055030563470085, 0.03838700700879771, -1.2974808368973607, -1.1592876116656892], \

  [-1.0195791547128206, -1.1346558086871794, -0.6053032004051282, 0.03326873940762454, -1.3179539073020528, -0.9340838372140761], \
  [-1.0195791547128206, -0.7970976236957266, -0.8047694006273507, 0.03838700700879771, -1.3179539073020528, -0.9289655696129031], \

  [-0.879952814557265, -1.028785287030769, -0.7664105159692309, -0.023032204205278628, -1.0262126540351908, -0.7907723443812318],\
   [-0.886090236102564, -1.068678527075214, -0.30303518929914564, -0.023032204205278628, -1.5022115409442816, -0.7856540767800588]


#########-----------task 4 config
[-1.5596722506991454, -1.4307863982478635, -1.5029011014051283, -0.02815047180645136, 1.4152009917243396, -0.02815047180645136], \
[-1.5673440276307693, -1.1239153209829063, -1.6824206816051284, -0.023032204205278628, 1.3998461889208214, -0.01791393660410545],\
 [-1.5427943414495726, -0.6682117712444446, -1.826650087919658, -0.01791393660410545, 1.0006213160293256, -0.023032204205278628], \
 [-1.5397256306769231, -0.3644094047521369, -1.8742151048957267, -0.01791393660410545, 0.6474608515483871, -0.03326873940762498], \
 [-1.548931762994872, -0.21097386611965785, -1.7330544093538462, -0.023032204205278628, 0.5041493587155426, -0.03838700700879771], \
 [-1.555069184540171, -0.14192787373504245, -1.3264502319777778, -0.01791393660410545, -0.07933314781818179, -0.04862354221114362], \
 [-1.568878383017094, -0.2508671061641028, -0.860006194535043, -0.01791393660410545, -0.42225707709677396, -0.03838700700879771],\
  [-1.556603539926496, -0.4810204141128205, -0.22938613075555558, -0.01791393660410545, -0.7805358091788857, -0.04862354221114362], \
  [-1.548931762994872, -0.25700452770940174, -0.520913654157265, -0.023032204205278628, -0.3813109362873903, -0.03326873940762498]
